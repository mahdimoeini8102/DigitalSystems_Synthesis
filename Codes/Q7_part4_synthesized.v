/* Generated by Yosys 0.7 (git sha1 61f6811, i686-w64-mingw32.static-gcc 4.9.3 -Os) */

module full_adder_1(a, b, c, Co, S);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  output Co;
  output S;
  input a;
  input b;
  input c;
  NAND _20_ (
    .A(_13_),
    .B(_12_),
    .Y(_15_)
  );
  NOT _21_ (
    .A(_12_),
    .Y(_17_)
  );
  NOT _22_ (
    .A(_13_),
    .Y(_18_)
  );
  NOR _23_ (
    .A(_18_),
    .B(_17_),
    .Y(_19_)
  );
  NOR _24_ (
    .A(_13_),
    .B(_12_),
    .Y(_04_)
  );
  NOR _25_ (
    .A(_04_),
    .B(_19_),
    .Y(_05_)
  );
  NAND _26_ (
    .A(_05_),
    .B(_03_),
    .Y(_06_)
  );
  NAND _27_ (
    .A(_06_),
    .B(_15_),
    .Y(_14_)
  );
  NOT _28_ (
    .A(_03_),
    .Y(_07_)
  );
  NAND _29_ (
    .A(_18_),
    .B(_17_),
    .Y(_08_)
  );
  NAND _30_ (
    .A(_08_),
    .B(_15_),
    .Y(_09_)
  );
  NOR _31_ (
    .A(_09_),
    .B(_07_),
    .Y(_10_)
  );
  NOR _32_ (
    .A(_05_),
    .B(_03_),
    .Y(_11_)
  );
  NOR _33_ (
    .A(_11_),
    .B(_10_),
    .Y(_16_)
  );
  assign _03_ = b;
  assign _12_ = c;
  assign _13_ = a;
  assign Co = _14_;
  assign S = _16_;
endmodule

module full_adder_2(a, b, c, Co, S);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  output Co;
  output [1:0] S;
  input [1:0] a;
  input [1:0] b;
  input c;
  NOT _35_ (
    .A(_28_),
    .Y(_34_)
  );
  NAND _36_ (
    .A(_06_),
    .B(_05_),
    .Y(_08_)
  );
  NOT _37_ (
    .A(_05_),
    .Y(_09_)
  );
  NOT _38_ (
    .A(_06_),
    .Y(_11_)
  );
  NAND _39_ (
    .A(_11_),
    .B(_09_),
    .Y(_12_)
  );
  NAND _40_ (
    .A(_12_),
    .B(_08_),
    .Y(_13_)
  );
  NOR _41_ (
    .A(_13_),
    .B(_34_),
    .Y(_14_)
  );
  NOR _42_ (
    .A(_11_),
    .B(_09_),
    .Y(_15_)
  );
  NOR _43_ (
    .A(_06_),
    .B(_05_),
    .Y(_16_)
  );
  NOR _44_ (
    .A(_16_),
    .B(_15_),
    .Y(_17_)
  );
  NOR _45_ (
    .A(_17_),
    .B(_28_),
    .Y(_18_)
  );
  NOR _46_ (
    .A(_18_),
    .B(_14_),
    .Y(_31_)
  );
  NOR _47_ (
    .A(_14_),
    .B(_15_),
    .Y(_19_)
  );
  NOR _48_ (
    .A(_33_),
    .B(_32_),
    .Y(_20_)
  );
  NAND _49_ (
    .A(_33_),
    .B(_32_),
    .Y(_21_)
  );
  NOT _50_ (
    .A(_21_),
    .Y(_22_)
  );
  NOR _51_ (
    .A(_22_),
    .B(_20_),
    .Y(_23_)
  );
  NOT _52_ (
    .A(_23_),
    .Y(_24_)
  );
  NOR _53_ (
    .A(_24_),
    .B(_19_),
    .Y(_25_)
  );
  NAND _54_ (
    .A(_17_),
    .B(_28_),
    .Y(_26_)
  );
  NAND _55_ (
    .A(_26_),
    .B(_08_),
    .Y(_27_)
  );
  NOR _56_ (
    .A(_23_),
    .B(_27_),
    .Y(_29_)
  );
  NOR _57_ (
    .A(_29_),
    .B(_25_),
    .Y(_07_)
  );
  NAND _58_ (
    .A(_23_),
    .B(_27_),
    .Y(_30_)
  );
  NAND _59_ (
    .A(_30_),
    .B(_21_),
    .Y(_10_)
  );
  assign _05_ = b[0];
  assign _06_ = a[0];
  assign _28_ = c;
  assign S[0] = _31_;
  assign _32_ = b[1];
  assign _33_ = a[1];
  assign S[1] = _07_;
  assign Co = _10_;
endmodule

module full_adder_3(a, b, c, Co, S);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  wire _48_;
  wire _49_;
  wire _50_;
  wire _51_;
  wire _52_;
  wire _53_;
  output Co;
  output [2:0] S;
  input [2:0] a;
  input [2:0] b;
  input c;
  NOT _54_ (
    .A(_33_),
    .Y(_13_)
  );
  NOT _55_ (
    .A(_09_),
    .Y(_15_)
  );
  NOT _56_ (
    .A(_10_),
    .Y(_16_)
  );
  NAND _57_ (
    .A(_16_),
    .B(_15_),
    .Y(_17_)
  );
  NAND _58_ (
    .A(_10_),
    .B(_09_),
    .Y(_18_)
  );
  NAND _59_ (
    .A(_18_),
    .B(_17_),
    .Y(_20_)
  );
  NOR _60_ (
    .A(_20_),
    .B(_13_),
    .Y(_21_)
  );
  NOR _61_ (
    .A(_10_),
    .B(_09_),
    .Y(_23_)
  );
  NOR _62_ (
    .A(_16_),
    .B(_15_),
    .Y(_24_)
  );
  NOR _63_ (
    .A(_24_),
    .B(_23_),
    .Y(_25_)
  );
  NOR _64_ (
    .A(_25_),
    .B(_33_),
    .Y(_26_)
  );
  NOR _65_ (
    .A(_26_),
    .B(_21_),
    .Y(_43_)
  );
  NOR _66_ (
    .A(_21_),
    .B(_24_),
    .Y(_27_)
  );
  NOT _67_ (
    .A(_52_),
    .Y(_28_)
  );
  NOT _68_ (
    .A(_53_),
    .Y(_29_)
  );
  NOR _69_ (
    .A(_29_),
    .B(_28_),
    .Y(_30_)
  );
  NOR _70_ (
    .A(_53_),
    .B(_52_),
    .Y(_31_)
  );
  NOR _71_ (
    .A(_31_),
    .B(_30_),
    .Y(_32_)
  );
  NOT _72_ (
    .A(_32_),
    .Y(_34_)
  );
  NOR _73_ (
    .A(_34_),
    .B(_27_),
    .Y(_35_)
  );
  NAND _74_ (
    .A(_25_),
    .B(_33_),
    .Y(_36_)
  );
  NAND _75_ (
    .A(_36_),
    .B(_18_),
    .Y(_37_)
  );
  NOR _76_ (
    .A(_32_),
    .B(_37_),
    .Y(_38_)
  );
  NOR _77_ (
    .A(_38_),
    .B(_35_),
    .Y(_11_)
  );
  NOR _78_ (
    .A(_35_),
    .B(_30_),
    .Y(_39_)
  );
  NOR _79_ (
    .A(_14_),
    .B(_12_),
    .Y(_40_)
  );
  NAND _80_ (
    .A(_14_),
    .B(_12_),
    .Y(_41_)
  );
  NOT _81_ (
    .A(_41_),
    .Y(_42_)
  );
  NOR _82_ (
    .A(_42_),
    .B(_40_),
    .Y(_44_)
  );
  NOT _83_ (
    .A(_44_),
    .Y(_45_)
  );
  NOR _84_ (
    .A(_45_),
    .B(_39_),
    .Y(_46_)
  );
  NOT _85_ (
    .A(_30_),
    .Y(_47_)
  );
  NAND _86_ (
    .A(_32_),
    .B(_37_),
    .Y(_48_)
  );
  NAND _87_ (
    .A(_48_),
    .B(_47_),
    .Y(_49_)
  );
  NOR _88_ (
    .A(_44_),
    .B(_49_),
    .Y(_50_)
  );
  NOR _89_ (
    .A(_50_),
    .B(_46_),
    .Y(_19_)
  );
  NAND _90_ (
    .A(_44_),
    .B(_49_),
    .Y(_51_)
  );
  NAND _91_ (
    .A(_51_),
    .B(_41_),
    .Y(_22_)
  );
  assign _09_ = b[0];
  assign _10_ = a[0];
  assign _33_ = c;
  assign S[0] = _43_;
  assign _52_ = b[1];
  assign _53_ = a[1];
  assign S[1] = _11_;
  assign _12_ = b[2];
  assign _14_ = a[2];
  assign S[2] = _19_;
  assign Co = _22_;
endmodule

module full_adder_4(a, b, c, Co, S);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  output Co;
  output [3:0] S;
  input [3:0] a;
  input [3:0] b;
  input c;
  NOT _073_ (
    .A(_039_),
    .Y(_020_)
  );
  NAND _074_ (
    .A(_016_),
    .B(_015_),
    .Y(_022_)
  );
  NOT _075_ (
    .A(_015_),
    .Y(_024_)
  );
  NOT _076_ (
    .A(_016_),
    .Y(_026_)
  );
  NAND _077_ (
    .A(_026_),
    .B(_024_),
    .Y(_027_)
  );
  NAND _078_ (
    .A(_027_),
    .B(_022_),
    .Y(_028_)
  );
  NOR _079_ (
    .A(_028_),
    .B(_020_),
    .Y(_029_)
  );
  NOR _080_ (
    .A(_026_),
    .B(_024_),
    .Y(_031_)
  );
  NOR _081_ (
    .A(_016_),
    .B(_015_),
    .Y(_032_)
  );
  NOR _082_ (
    .A(_032_),
    .B(_031_),
    .Y(_033_)
  );
  NOR _083_ (
    .A(_033_),
    .B(_039_),
    .Y(_034_)
  );
  NOR _084_ (
    .A(_034_),
    .B(_029_),
    .Y(_049_)
  );
  NOR _085_ (
    .A(_029_),
    .B(_031_),
    .Y(_035_)
  );
  NOR _086_ (
    .A(_070_),
    .B(_059_),
    .Y(_037_)
  );
  NAND _087_ (
    .A(_070_),
    .B(_059_),
    .Y(_038_)
  );
  NOT _088_ (
    .A(_038_),
    .Y(_040_)
  );
  NOR _089_ (
    .A(_040_),
    .B(_037_),
    .Y(_041_)
  );
  NOT _090_ (
    .A(_041_),
    .Y(_042_)
  );
  NOR _091_ (
    .A(_042_),
    .B(_035_),
    .Y(_043_)
  );
  NAND _092_ (
    .A(_033_),
    .B(_039_),
    .Y(_044_)
  );
  NAND _093_ (
    .A(_044_),
    .B(_022_),
    .Y(_045_)
  );
  NOR _094_ (
    .A(_041_),
    .B(_045_),
    .Y(_046_)
  );
  NOR _095_ (
    .A(_046_),
    .B(_043_),
    .Y(_017_)
  );
  NOR _096_ (
    .A(_043_),
    .B(_040_),
    .Y(_047_)
  );
  NAND _097_ (
    .A(_019_),
    .B(_018_),
    .Y(_048_)
  );
  NOT _098_ (
    .A(_048_),
    .Y(_050_)
  );
  NOR _099_ (
    .A(_019_),
    .B(_018_),
    .Y(_051_)
  );
  NOR _100_ (
    .A(_051_),
    .B(_050_),
    .Y(_052_)
  );
  NOT _101_ (
    .A(_052_),
    .Y(_053_)
  );
  NOR _102_ (
    .A(_053_),
    .B(_047_),
    .Y(_054_)
  );
  NAND _103_ (
    .A(_041_),
    .B(_045_),
    .Y(_055_)
  );
  NAND _104_ (
    .A(_055_),
    .B(_038_),
    .Y(_056_)
  );
  NOR _105_ (
    .A(_052_),
    .B(_056_),
    .Y(_057_)
  );
  NOR _106_ (
    .A(_057_),
    .B(_054_),
    .Y(_021_)
  );
  NOR _107_ (
    .A(_054_),
    .B(_050_),
    .Y(_058_)
  );
  NOT _108_ (
    .A(_023_),
    .Y(_060_)
  );
  NOT _109_ (
    .A(_025_),
    .Y(_061_)
  );
  NOR _110_ (
    .A(_061_),
    .B(_060_),
    .Y(_062_)
  );
  NOR _111_ (
    .A(_025_),
    .B(_023_),
    .Y(_063_)
  );
  NOR _112_ (
    .A(_063_),
    .B(_062_),
    .Y(_064_)
  );
  NOT _113_ (
    .A(_064_),
    .Y(_065_)
  );
  NOR _114_ (
    .A(_065_),
    .B(_058_),
    .Y(_066_)
  );
  NAND _115_ (
    .A(_052_),
    .B(_056_),
    .Y(_067_)
  );
  NAND _116_ (
    .A(_067_),
    .B(_048_),
    .Y(_068_)
  );
  NOR _117_ (
    .A(_064_),
    .B(_068_),
    .Y(_069_)
  );
  NOR _118_ (
    .A(_069_),
    .B(_066_),
    .Y(_030_)
  );
  NOT _119_ (
    .A(_062_),
    .Y(_071_)
  );
  NAND _120_ (
    .A(_064_),
    .B(_068_),
    .Y(_072_)
  );
  NAND _121_ (
    .A(_072_),
    .B(_071_),
    .Y(_036_)
  );
  assign _015_ = b[0];
  assign _016_ = a[0];
  assign _039_ = c;
  assign S[0] = _049_;
  assign _059_ = b[1];
  assign _070_ = a[1];
  assign S[1] = _017_;
  assign _018_ = b[2];
  assign _019_ = a[2];
  assign S[2] = _021_;
  assign _023_ = b[3];
  assign _025_ = a[3];
  assign S[3] = _030_;
  assign Co = _036_;
endmodule

module full_adder_5(a, b, c, Co, S);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  output Co;
  output [4:0] S;
  input [4:0] a;
  input [4:0] b;
  input c;
  NOT _088_ (
    .A(_040_),
    .Y(_026_)
  );
  NAND _089_ (
    .A(_019_),
    .B(_018_),
    .Y(_027_)
  );
  NOT _090_ (
    .A(_018_),
    .Y(_028_)
  );
  NOT _091_ (
    .A(_019_),
    .Y(_029_)
  );
  NAND _092_ (
    .A(_029_),
    .B(_028_),
    .Y(_030_)
  );
  NAND _093_ (
    .A(_030_),
    .B(_027_),
    .Y(_031_)
  );
  NOR _094_ (
    .A(_031_),
    .B(_026_),
    .Y(_033_)
  );
  NOR _095_ (
    .A(_029_),
    .B(_028_),
    .Y(_035_)
  );
  NOR _096_ (
    .A(_019_),
    .B(_018_),
    .Y(_037_)
  );
  NOR _097_ (
    .A(_037_),
    .B(_035_),
    .Y(_038_)
  );
  NOR _098_ (
    .A(_038_),
    .B(_040_),
    .Y(_039_)
  );
  NOR _099_ (
    .A(_039_),
    .B(_033_),
    .Y(_053_)
  );
  NOR _100_ (
    .A(_033_),
    .B(_035_),
    .Y(_041_)
  );
  NOR _101_ (
    .A(_073_),
    .B(_063_),
    .Y(_042_)
  );
  NAND _102_ (
    .A(_073_),
    .B(_063_),
    .Y(_044_)
  );
  NOT _103_ (
    .A(_044_),
    .Y(_045_)
  );
  NOR _104_ (
    .A(_045_),
    .B(_042_),
    .Y(_047_)
  );
  NOT _105_ (
    .A(_047_),
    .Y(_048_)
  );
  NOR _106_ (
    .A(_048_),
    .B(_041_),
    .Y(_049_)
  );
  NAND _107_ (
    .A(_038_),
    .B(_040_),
    .Y(_050_)
  );
  NAND _108_ (
    .A(_050_),
    .B(_027_),
    .Y(_051_)
  );
  NOR _109_ (
    .A(_047_),
    .B(_051_),
    .Y(_052_)
  );
  NOR _110_ (
    .A(_052_),
    .B(_049_),
    .Y(_020_)
  );
  NOR _111_ (
    .A(_049_),
    .B(_045_),
    .Y(_054_)
  );
  NOR _112_ (
    .A(_022_),
    .B(_021_),
    .Y(_055_)
  );
  NAND _113_ (
    .A(_022_),
    .B(_021_),
    .Y(_056_)
  );
  NOT _114_ (
    .A(_056_),
    .Y(_057_)
  );
  NOR _115_ (
    .A(_057_),
    .B(_055_),
    .Y(_058_)
  );
  NOT _116_ (
    .A(_058_),
    .Y(_059_)
  );
  NOR _117_ (
    .A(_059_),
    .B(_054_),
    .Y(_060_)
  );
  NAND _118_ (
    .A(_047_),
    .B(_051_),
    .Y(_061_)
  );
  NAND _119_ (
    .A(_061_),
    .B(_044_),
    .Y(_062_)
  );
  NOR _120_ (
    .A(_058_),
    .B(_062_),
    .Y(_064_)
  );
  NOR _121_ (
    .A(_064_),
    .B(_060_),
    .Y(_023_)
  );
  NOR _122_ (
    .A(_060_),
    .B(_057_),
    .Y(_065_)
  );
  NOR _123_ (
    .A(_025_),
    .B(_024_),
    .Y(_066_)
  );
  NAND _124_ (
    .A(_025_),
    .B(_024_),
    .Y(_067_)
  );
  NOT _125_ (
    .A(_067_),
    .Y(_068_)
  );
  NOR _126_ (
    .A(_068_),
    .B(_066_),
    .Y(_069_)
  );
  NAND _127_ (
    .A(_069_),
    .B(_065_),
    .Y(_070_)
  );
  NAND _128_ (
    .A(_058_),
    .B(_062_),
    .Y(_071_)
  );
  NAND _129_ (
    .A(_071_),
    .B(_056_),
    .Y(_072_)
  );
  NOT _130_ (
    .A(_069_),
    .Y(_074_)
  );
  NAND _131_ (
    .A(_074_),
    .B(_072_),
    .Y(_075_)
  );
  NAND _132_ (
    .A(_075_),
    .B(_070_),
    .Y(_032_)
  );
  NOR _133_ (
    .A(_036_),
    .B(_034_),
    .Y(_076_)
  );
  NAND _134_ (
    .A(_036_),
    .B(_034_),
    .Y(_077_)
  );
  NOT _135_ (
    .A(_077_),
    .Y(_078_)
  );
  NOR _136_ (
    .A(_078_),
    .B(_076_),
    .Y(_079_)
  );
  NOT _137_ (
    .A(_079_),
    .Y(_080_)
  );
  NOR _138_ (
    .A(_066_),
    .B(_065_),
    .Y(_081_)
  );
  NOR _139_ (
    .A(_081_),
    .B(_068_),
    .Y(_082_)
  );
  NOR _140_ (
    .A(_082_),
    .B(_080_),
    .Y(_083_)
  );
  NOR _141_ (
    .A(_068_),
    .B(_072_),
    .Y(_084_)
  );
  NOR _142_ (
    .A(_084_),
    .B(_066_),
    .Y(_085_)
  );
  NOR _143_ (
    .A(_085_),
    .B(_079_),
    .Y(_086_)
  );
  NOR _144_ (
    .A(_086_),
    .B(_083_),
    .Y(_043_)
  );
  NAND _145_ (
    .A(_085_),
    .B(_079_),
    .Y(_087_)
  );
  NAND _146_ (
    .A(_087_),
    .B(_077_),
    .Y(_046_)
  );
  assign _018_ = b[0];
  assign _019_ = a[0];
  assign _040_ = c;
  assign S[0] = _053_;
  assign _063_ = b[1];
  assign _073_ = a[1];
  assign S[1] = _020_;
  assign _021_ = b[2];
  assign _022_ = a[2];
  assign S[2] = _023_;
  assign _024_ = b[3];
  assign _025_ = a[3];
  assign S[3] = _032_;
  assign _034_ = b[4];
  assign _036_ = a[4];
  assign S[4] = _043_;
  assign Co = _046_;
endmodule

module full_adder_6(a, b, c, Co, S);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  output Co;
  output [5:0] S;
  input [5:0] a;
  input [5:0] b;
  input c;
  NOT _114_ (
    .A(_045_),
    .Y(_033_)
  );
  NOT _115_ (
    .A(_025_),
    .Y(_034_)
  );
  NOT _116_ (
    .A(_026_),
    .Y(_035_)
  );
  NAND _117_ (
    .A(_035_),
    .B(_034_),
    .Y(_037_)
  );
  NAND _118_ (
    .A(_026_),
    .B(_025_),
    .Y(_039_)
  );
  NAND _119_ (
    .A(_039_),
    .B(_037_),
    .Y(_041_)
  );
  NOR _120_ (
    .A(_041_),
    .B(_033_),
    .Y(_042_)
  );
  NOR _121_ (
    .A(_026_),
    .B(_025_),
    .Y(_043_)
  );
  NOR _122_ (
    .A(_035_),
    .B(_034_),
    .Y(_044_)
  );
  NOR _123_ (
    .A(_044_),
    .B(_043_),
    .Y(_046_)
  );
  NOR _124_ (
    .A(_046_),
    .B(_045_),
    .Y(_047_)
  );
  NOR _125_ (
    .A(_047_),
    .B(_042_),
    .Y(_059_)
  );
  NOR _126_ (
    .A(_042_),
    .B(_044_),
    .Y(_050_)
  );
  NOT _127_ (
    .A(_070_),
    .Y(_052_)
  );
  NOT _128_ (
    .A(_080_),
    .Y(_053_)
  );
  NOR _129_ (
    .A(_053_),
    .B(_052_),
    .Y(_054_)
  );
  NOR _130_ (
    .A(_080_),
    .B(_070_),
    .Y(_055_)
  );
  NOR _131_ (
    .A(_055_),
    .B(_054_),
    .Y(_057_)
  );
  NOT _132_ (
    .A(_057_),
    .Y(_058_)
  );
  NOR _133_ (
    .A(_058_),
    .B(_050_),
    .Y(_060_)
  );
  NAND _134_ (
    .A(_046_),
    .B(_045_),
    .Y(_061_)
  );
  NAND _135_ (
    .A(_061_),
    .B(_039_),
    .Y(_062_)
  );
  NOR _136_ (
    .A(_057_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _137_ (
    .A(_063_),
    .B(_060_),
    .Y(_027_)
  );
  NOR _138_ (
    .A(_060_),
    .B(_054_),
    .Y(_065_)
  );
  NAND _139_ (
    .A(_029_),
    .B(_028_),
    .Y(_066_)
  );
  NOT _140_ (
    .A(_066_),
    .Y(_067_)
  );
  NOR _141_ (
    .A(_029_),
    .B(_028_),
    .Y(_068_)
  );
  NOR _142_ (
    .A(_068_),
    .B(_067_),
    .Y(_069_)
  );
  NOT _143_ (
    .A(_069_),
    .Y(_071_)
  );
  NOR _144_ (
    .A(_071_),
    .B(_065_),
    .Y(_072_)
  );
  NOT _145_ (
    .A(_054_),
    .Y(_073_)
  );
  NAND _146_ (
    .A(_057_),
    .B(_062_),
    .Y(_074_)
  );
  NAND _147_ (
    .A(_074_),
    .B(_073_),
    .Y(_075_)
  );
  NOR _148_ (
    .A(_069_),
    .B(_075_),
    .Y(_076_)
  );
  NOR _149_ (
    .A(_076_),
    .B(_072_),
    .Y(_030_)
  );
  NOR _150_ (
    .A(_072_),
    .B(_067_),
    .Y(_077_)
  );
  NOR _151_ (
    .A(_032_),
    .B(_031_),
    .Y(_078_)
  );
  NAND _152_ (
    .A(_032_),
    .B(_031_),
    .Y(_079_)
  );
  NOT _153_ (
    .A(_079_),
    .Y(_081_)
  );
  NOR _154_ (
    .A(_081_),
    .B(_078_),
    .Y(_082_)
  );
  NAND _155_ (
    .A(_082_),
    .B(_077_),
    .Y(_083_)
  );
  NAND _156_ (
    .A(_069_),
    .B(_075_),
    .Y(_084_)
  );
  NAND _157_ (
    .A(_084_),
    .B(_066_),
    .Y(_085_)
  );
  NOT _158_ (
    .A(_082_),
    .Y(_086_)
  );
  NAND _159_ (
    .A(_086_),
    .B(_085_),
    .Y(_087_)
  );
  NAND _160_ (
    .A(_087_),
    .B(_083_),
    .Y(_036_)
  );
  NOT _161_ (
    .A(_038_),
    .Y(_088_)
  );
  NOT _162_ (
    .A(_040_),
    .Y(_089_)
  );
  NOR _163_ (
    .A(_089_),
    .B(_088_),
    .Y(_090_)
  );
  NOR _164_ (
    .A(_040_),
    .B(_038_),
    .Y(_091_)
  );
  NOR _165_ (
    .A(_091_),
    .B(_090_),
    .Y(_092_)
  );
  NOT _166_ (
    .A(_092_),
    .Y(_093_)
  );
  NOR _167_ (
    .A(_078_),
    .B(_077_),
    .Y(_094_)
  );
  NOR _168_ (
    .A(_094_),
    .B(_081_),
    .Y(_095_)
  );
  NOR _169_ (
    .A(_095_),
    .B(_093_),
    .Y(_096_)
  );
  NOR _170_ (
    .A(_081_),
    .B(_085_),
    .Y(_097_)
  );
  NOR _171_ (
    .A(_097_),
    .B(_078_),
    .Y(_098_)
  );
  NOR _172_ (
    .A(_098_),
    .B(_092_),
    .Y(_099_)
  );
  NOR _173_ (
    .A(_099_),
    .B(_096_),
    .Y(_048_)
  );
  NOR _174_ (
    .A(_096_),
    .B(_090_),
    .Y(_100_)
  );
  NOT _175_ (
    .A(_049_),
    .Y(_101_)
  );
  NOT _176_ (
    .A(_051_),
    .Y(_102_)
  );
  NOR _177_ (
    .A(_102_),
    .B(_101_),
    .Y(_103_)
  );
  NOR _178_ (
    .A(_051_),
    .B(_049_),
    .Y(_104_)
  );
  NOR _179_ (
    .A(_104_),
    .B(_103_),
    .Y(_105_)
  );
  NOT _180_ (
    .A(_105_),
    .Y(_106_)
  );
  NOR _181_ (
    .A(_106_),
    .B(_100_),
    .Y(_107_)
  );
  NOT _182_ (
    .A(_090_),
    .Y(_108_)
  );
  NAND _183_ (
    .A(_098_),
    .B(_092_),
    .Y(_109_)
  );
  NAND _184_ (
    .A(_109_),
    .B(_108_),
    .Y(_110_)
  );
  NOR _185_ (
    .A(_105_),
    .B(_110_),
    .Y(_111_)
  );
  NOR _186_ (
    .A(_111_),
    .B(_107_),
    .Y(_056_)
  );
  NOT _187_ (
    .A(_103_),
    .Y(_112_)
  );
  NAND _188_ (
    .A(_105_),
    .B(_110_),
    .Y(_113_)
  );
  NAND _189_ (
    .A(_113_),
    .B(_112_),
    .Y(_064_)
  );
  assign _025_ = b[0];
  assign _026_ = a[0];
  assign _045_ = c;
  assign S[0] = _059_;
  assign _070_ = b[1];
  assign _080_ = a[1];
  assign S[1] = _027_;
  assign _028_ = b[2];
  assign _029_ = a[2];
  assign S[2] = _030_;
  assign _031_ = b[3];
  assign _032_ = a[3];
  assign S[3] = _036_;
  assign _038_ = b[4];
  assign _040_ = a[4];
  assign S[4] = _048_;
  assign _049_ = b[5];
  assign _051_ = a[5];
  assign S[5] = _056_;
  assign Co = _064_;
endmodule

module ones_counter(i, S);
  output [6:0] S;
  input [126:0] i;
  wire [95:0] input_1bit;
  wire [79:0] input_2bit;
  wire [55:0] input_3bit;
  wire [35:0] input_4bit;
  wire [21:0] input_5bit;
  wire [12:0] input_6bit;
  full_adder_5 \five_bits[0].five_bit  (
    .Co(input_6bit[5]),
    .S(input_6bit[4:0]),
    .a(input_5bit[4:0]),
    .b(input_5bit[9:5]),
    .c(i[124])
  );
  full_adder_5 \five_bits[1].five_bit  (
    .Co(input_6bit[11]),
    .S(input_6bit[10:6]),
    .a(input_5bit[14:10]),
    .b(input_5bit[19:15]),
    .c(i[125])
  );
  full_adder_4 \four_bits[0].four_bit  (
    .Co(input_5bit[4]),
    .S(input_5bit[3:0]),
    .a(input_4bit[3:0]),
    .b(input_4bit[7:4]),
    .c(i[120])
  );
  full_adder_4 \four_bits[1].four_bit  (
    .Co(input_5bit[9]),
    .S(input_5bit[8:5]),
    .a(input_4bit[11:8]),
    .b(input_4bit[15:12]),
    .c(i[121])
  );
  full_adder_4 \four_bits[2].four_bit  (
    .Co(input_5bit[14]),
    .S(input_5bit[13:10]),
    .a(input_4bit[19:16]),
    .b(input_4bit[23:20]),
    .c(i[122])
  );
  full_adder_4 \four_bits[3].four_bit  (
    .Co(input_5bit[19]),
    .S(input_5bit[18:15]),
    .a(input_4bit[27:24]),
    .b(input_4bit[31:28]),
    .c(i[123])
  );
  full_adder_1 \one_bits[0].one_bit  (
    .Co(input_2bit[1]),
    .S(input_2bit[0]),
    .a(i[1]),
    .b(i[0]),
    .c(i[2])
  );
  full_adder_1 \one_bits[10].one_bit  (
    .Co(input_2bit[21]),
    .S(input_2bit[20]),
    .a(i[31]),
    .b(i[30]),
    .c(i[32])
  );
  full_adder_1 \one_bits[11].one_bit  (
    .Co(input_2bit[23]),
    .S(input_2bit[22]),
    .a(i[34]),
    .b(i[33]),
    .c(i[35])
  );
  full_adder_1 \one_bits[12].one_bit  (
    .Co(input_2bit[25]),
    .S(input_2bit[24]),
    .a(i[37]),
    .b(i[36]),
    .c(i[38])
  );
  full_adder_1 \one_bits[13].one_bit  (
    .Co(input_2bit[27]),
    .S(input_2bit[26]),
    .a(i[40]),
    .b(i[39]),
    .c(i[41])
  );
  full_adder_1 \one_bits[14].one_bit  (
    .Co(input_2bit[29]),
    .S(input_2bit[28]),
    .a(i[43]),
    .b(i[42]),
    .c(i[44])
  );
  full_adder_1 \one_bits[15].one_bit  (
    .Co(input_2bit[31]),
    .S(input_2bit[30]),
    .a(i[46]),
    .b(i[45]),
    .c(i[47])
  );
  full_adder_1 \one_bits[16].one_bit  (
    .Co(input_2bit[33]),
    .S(input_2bit[32]),
    .a(i[49]),
    .b(i[48]),
    .c(i[50])
  );
  full_adder_1 \one_bits[17].one_bit  (
    .Co(input_2bit[35]),
    .S(input_2bit[34]),
    .a(i[52]),
    .b(i[51]),
    .c(i[53])
  );
  full_adder_1 \one_bits[18].one_bit  (
    .Co(input_2bit[37]),
    .S(input_2bit[36]),
    .a(i[55]),
    .b(i[54]),
    .c(i[56])
  );
  full_adder_1 \one_bits[19].one_bit  (
    .Co(input_2bit[39]),
    .S(input_2bit[38]),
    .a(i[58]),
    .b(i[57]),
    .c(i[59])
  );
  full_adder_1 \one_bits[1].one_bit  (
    .Co(input_2bit[3]),
    .S(input_2bit[2]),
    .a(i[4]),
    .b(i[3]),
    .c(i[5])
  );
  full_adder_1 \one_bits[20].one_bit  (
    .Co(input_2bit[41]),
    .S(input_2bit[40]),
    .a(i[61]),
    .b(i[60]),
    .c(i[62])
  );
  full_adder_1 \one_bits[21].one_bit  (
    .Co(input_2bit[43]),
    .S(input_2bit[42]),
    .a(i[64]),
    .b(i[63]),
    .c(i[65])
  );
  full_adder_1 \one_bits[22].one_bit  (
    .Co(input_2bit[45]),
    .S(input_2bit[44]),
    .a(i[67]),
    .b(i[66]),
    .c(i[68])
  );
  full_adder_1 \one_bits[23].one_bit  (
    .Co(input_2bit[47]),
    .S(input_2bit[46]),
    .a(i[70]),
    .b(i[69]),
    .c(i[71])
  );
  full_adder_1 \one_bits[24].one_bit  (
    .Co(input_2bit[49]),
    .S(input_2bit[48]),
    .a(i[73]),
    .b(i[72]),
    .c(i[74])
  );
  full_adder_1 \one_bits[25].one_bit  (
    .Co(input_2bit[51]),
    .S(input_2bit[50]),
    .a(i[76]),
    .b(i[75]),
    .c(i[77])
  );
  full_adder_1 \one_bits[26].one_bit  (
    .Co(input_2bit[53]),
    .S(input_2bit[52]),
    .a(i[79]),
    .b(i[78]),
    .c(i[80])
  );
  full_adder_1 \one_bits[27].one_bit  (
    .Co(input_2bit[55]),
    .S(input_2bit[54]),
    .a(i[82]),
    .b(i[81]),
    .c(i[83])
  );
  full_adder_1 \one_bits[28].one_bit  (
    .Co(input_2bit[57]),
    .S(input_2bit[56]),
    .a(i[85]),
    .b(i[84]),
    .c(i[86])
  );
  full_adder_1 \one_bits[29].one_bit  (
    .Co(input_2bit[59]),
    .S(input_2bit[58]),
    .a(i[88]),
    .b(i[87]),
    .c(i[89])
  );
  full_adder_1 \one_bits[2].one_bit  (
    .Co(input_2bit[5]),
    .S(input_2bit[4]),
    .a(i[7]),
    .b(i[6]),
    .c(i[8])
  );
  full_adder_1 \one_bits[30].one_bit  (
    .Co(input_2bit[61]),
    .S(input_2bit[60]),
    .a(i[91]),
    .b(i[90]),
    .c(i[92])
  );
  full_adder_1 \one_bits[31].one_bit  (
    .Co(input_2bit[63]),
    .S(input_2bit[62]),
    .a(i[94]),
    .b(i[93]),
    .c(i[95])
  );
  full_adder_1 \one_bits[3].one_bit  (
    .Co(input_2bit[7]),
    .S(input_2bit[6]),
    .a(i[10]),
    .b(i[9]),
    .c(i[11])
  );
  full_adder_1 \one_bits[4].one_bit  (
    .Co(input_2bit[9]),
    .S(input_2bit[8]),
    .a(i[13]),
    .b(i[12]),
    .c(i[14])
  );
  full_adder_1 \one_bits[5].one_bit  (
    .Co(input_2bit[11]),
    .S(input_2bit[10]),
    .a(i[16]),
    .b(i[15]),
    .c(i[17])
  );
  full_adder_1 \one_bits[6].one_bit  (
    .Co(input_2bit[13]),
    .S(input_2bit[12]),
    .a(i[19]),
    .b(i[18]),
    .c(i[20])
  );
  full_adder_1 \one_bits[7].one_bit  (
    .Co(input_2bit[15]),
    .S(input_2bit[14]),
    .a(i[22]),
    .b(i[21]),
    .c(i[23])
  );
  full_adder_1 \one_bits[8].one_bit  (
    .Co(input_2bit[17]),
    .S(input_2bit[16]),
    .a(i[25]),
    .b(i[24]),
    .c(i[26])
  );
  full_adder_1 \one_bits[9].one_bit  (
    .Co(input_2bit[19]),
    .S(input_2bit[18]),
    .a(i[28]),
    .b(i[27]),
    .c(i[29])
  );
  full_adder_6 six_bit (
    .Co(S[6]),
    .S(S[5:0]),
    .a(input_6bit[5:0]),
    .b(input_6bit[11:6]),
    .c(i[126])
  );
  full_adder_3 \three_bits[0].three_bit  (
    .Co(input_4bit[3]),
    .S(input_4bit[2:0]),
    .a(input_3bit[2:0]),
    .b(input_3bit[5:3]),
    .c(i[112])
  );
  full_adder_3 \three_bits[1].three_bit  (
    .Co(input_4bit[7]),
    .S(input_4bit[6:4]),
    .a(input_3bit[8:6]),
    .b(input_3bit[11:9]),
    .c(i[113])
  );
  full_adder_3 \three_bits[2].three_bit  (
    .Co(input_4bit[11]),
    .S(input_4bit[10:8]),
    .a(input_3bit[14:12]),
    .b(input_3bit[17:15]),
    .c(i[114])
  );
  full_adder_3 \three_bits[3].three_bit  (
    .Co(input_4bit[15]),
    .S(input_4bit[14:12]),
    .a(input_3bit[20:18]),
    .b(input_3bit[23:21]),
    .c(i[115])
  );
  full_adder_3 \three_bits[4].three_bit  (
    .Co(input_4bit[19]),
    .S(input_4bit[18:16]),
    .a(input_3bit[26:24]),
    .b(input_3bit[29:27]),
    .c(i[116])
  );
  full_adder_3 \three_bits[5].three_bit  (
    .Co(input_4bit[23]),
    .S(input_4bit[22:20]),
    .a(input_3bit[32:30]),
    .b(input_3bit[35:33]),
    .c(i[117])
  );
  full_adder_3 \three_bits[6].three_bit  (
    .Co(input_4bit[27]),
    .S(input_4bit[26:24]),
    .a(input_3bit[38:36]),
    .b(input_3bit[41:39]),
    .c(i[118])
  );
  full_adder_3 \three_bits[7].three_bit  (
    .Co(input_4bit[31]),
    .S(input_4bit[30:28]),
    .a(input_3bit[44:42]),
    .b(input_3bit[47:45]),
    .c(i[119])
  );
  full_adder_2 \two_bits[0].two_bit  (
    .Co(input_3bit[2]),
    .S(input_3bit[1:0]),
    .a(input_2bit[1:0]),
    .b(input_2bit[3:2]),
    .c(i[96])
  );
  full_adder_2 \two_bits[10].two_bit  (
    .Co(input_3bit[32]),
    .S(input_3bit[31:30]),
    .a(input_2bit[41:40]),
    .b(input_2bit[43:42]),
    .c(i[106])
  );
  full_adder_2 \two_bits[11].two_bit  (
    .Co(input_3bit[35]),
    .S(input_3bit[34:33]),
    .a(input_2bit[45:44]),
    .b(input_2bit[47:46]),
    .c(i[107])
  );
  full_adder_2 \two_bits[12].two_bit  (
    .Co(input_3bit[38]),
    .S(input_3bit[37:36]),
    .a(input_2bit[49:48]),
    .b(input_2bit[51:50]),
    .c(i[108])
  );
  full_adder_2 \two_bits[13].two_bit  (
    .Co(input_3bit[41]),
    .S(input_3bit[40:39]),
    .a(input_2bit[53:52]),
    .b(input_2bit[55:54]),
    .c(i[109])
  );
  full_adder_2 \two_bits[14].two_bit  (
    .Co(input_3bit[44]),
    .S(input_3bit[43:42]),
    .a(input_2bit[57:56]),
    .b(input_2bit[59:58]),
    .c(i[110])
  );
  full_adder_2 \two_bits[15].two_bit  (
    .Co(input_3bit[47]),
    .S(input_3bit[46:45]),
    .a(input_2bit[61:60]),
    .b(input_2bit[63:62]),
    .c(i[111])
  );
  full_adder_2 \two_bits[1].two_bit  (
    .Co(input_3bit[5]),
    .S(input_3bit[4:3]),
    .a(input_2bit[5:4]),
    .b(input_2bit[7:6]),
    .c(i[97])
  );
  full_adder_2 \two_bits[2].two_bit  (
    .Co(input_3bit[8]),
    .S(input_3bit[7:6]),
    .a(input_2bit[9:8]),
    .b(input_2bit[11:10]),
    .c(i[98])
  );
  full_adder_2 \two_bits[3].two_bit  (
    .Co(input_3bit[11]),
    .S(input_3bit[10:9]),
    .a(input_2bit[13:12]),
    .b(input_2bit[15:14]),
    .c(i[99])
  );
  full_adder_2 \two_bits[4].two_bit  (
    .Co(input_3bit[14]),
    .S(input_3bit[13:12]),
    .a(input_2bit[17:16]),
    .b(input_2bit[19:18]),
    .c(i[100])
  );
  full_adder_2 \two_bits[5].two_bit  (
    .Co(input_3bit[17]),
    .S(input_3bit[16:15]),
    .a(input_2bit[21:20]),
    .b(input_2bit[23:22]),
    .c(i[101])
  );
  full_adder_2 \two_bits[6].two_bit  (
    .Co(input_3bit[20]),
    .S(input_3bit[19:18]),
    .a(input_2bit[25:24]),
    .b(input_2bit[27:26]),
    .c(i[102])
  );
  full_adder_2 \two_bits[7].two_bit  (
    .Co(input_3bit[23]),
    .S(input_3bit[22:21]),
    .a(input_2bit[29:28]),
    .b(input_2bit[31:30]),
    .c(i[103])
  );
  full_adder_2 \two_bits[8].two_bit  (
    .Co(input_3bit[26]),
    .S(input_3bit[25:24]),
    .a(input_2bit[33:32]),
    .b(input_2bit[35:34]),
    .c(i[104])
  );
  full_adder_2 \two_bits[9].two_bit  (
    .Co(input_3bit[29]),
    .S(input_3bit[28:27]),
    .a(input_2bit[37:36]),
    .b(input_2bit[39:38]),
    .c(i[105])
  );
  assign input_1bit = i[95:0];
  assign input_2bit[79:64] = i[111:96];
  assign input_3bit[55:48] = i[119:112];
  assign input_4bit[35:32] = i[123:120];
  assign input_5bit[21:20] = i[125:124];
  assign input_6bit[12] = i[126];
endmodule
